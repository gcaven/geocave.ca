{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/geoffreycaven/Projects/geocave.ca/src/components/header.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport NavBar from './navbar';\nimport '../styles/App.css';\n\nclass Header extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleScroll\", () => {\n      const top = document.documentElement.scrollTop || document.body.parentNode.scrollTop || document.body.scrollTop;\n\n      if (top > 500) {\n        this.setState({\n          headerClass: \"visible\"\n        });\n      } else {\n        this.setState({\n          headerClass: \"\"\n        });\n      }\n    });\n\n    this.state = {\n      headerClass: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.bindScroll();\n  }\n\n  componentWillUnmount() {\n    this.unbindScroll();\n  }\n\n  bindScroll() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  unbindScroll() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header \" + this.state.headerClass,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"brand\",\n        children: \"Geoffrey Caven\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["/Users/geoffreycaven/Projects/geocave.ca/src/components/header.jsx"],"names":["React","NavBar","Header","PureComponent","constructor","props","top","document","documentElement","scrollTop","body","parentNode","setState","headerClass","state","componentDidMount","bindScroll","componentWillUnmount","unbindScroll","window","addEventListener","handleScroll","removeEventListener","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,mBAAP;;AAEA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,aAA3B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACnB,UAAMA,KAAN;;AADmB,0CA2BJ,MAAM;AACnB,YAAMC,GAAG,GAAGC,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,IACPF,QAAQ,CAACG,IAAT,CAAcC,UAAd,CAAyBF,SADlB,IAEPF,QAAQ,CAACG,IAAT,CAAcD,SAFnB;;AAIA,UAAIH,GAAG,GAAG,GAAV,EAAe;AACb,aAAKM,QAAL,CAAc;AAACC,UAAAA,WAAW,EAAE;AAAd,SAAd;AACD,OAFD,MAEO;AACL,aAAKD,QAAL,CAAc;AAACC,UAAAA,WAAW,EAAE;AAAd,SAAd;AACD;AACF,KArCkB;;AAGnB,SAAKC,KAAL,GAAa;AACZD,MAAAA,WAAW,EAAE;AADD,KAAb;AAGA;;AAEAE,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,UAAL;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKC,YAAL;AACD;;AAEDF,EAAAA,UAAU,GAAG;AACXG,IAAAA,MAAM,CAACC,gBAAP,CACE,QADF,EAEE,KAAKC,YAFP;AAID;;AAEDH,EAAAA,YAAY,GAAG;AACbC,IAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqC,KAAKD,YAA1C;AACD;;AAcDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAE,YAAY,KAAKT,KAAL,CAAWD,WAAvC;AAAA,8BACE;AAAI,QAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA/CsC;;AAkDzC,eAAeX,MAAf","sourcesContent":["import React from 'react';\n\nimport NavBar from './navbar'\nimport '../styles/App.css';\n\nclass Header extends React.PureComponent {\n  constructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\theaderClass: \"\"\n\t\t};\n\t}\n\n  componentDidMount() {\n    this.bindScroll();\n  }\n\n  componentWillUnmount() {\n    this.unbindScroll();\n  }\n\n  bindScroll() {\n    window.addEventListener(\n      'scroll',\n      this.handleScroll\n    );\n  }\n\n  unbindScroll() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll = () => {\n    const top = document.documentElement.scrollTop\n      || document.body.parentNode.scrollTop\n      || document.body.scrollTop\n\n    if (top > 500) {\n      this.setState({headerClass: \"visible\"});\n    } else {\n      this.setState({headerClass: \"\"})\n    }\n  }\n\n  render() {\n    return (\n      <div className={\"header \" + this.state.headerClass}>\n        <h1 id=\"brand\">Geoffrey Caven</h1>\n        <NavBar/>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}