{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/geoffreycaven/Projects/geocave.ca/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geoffreycaven/Projects/geocave.ca/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/geoffreycaven/Projects/geocave.ca/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/geoffreycaven/Projects/geocave.ca/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/geoffreycaven/Projects/geocave.ca/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/geoffreycaven/Projects/geocave.ca/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/geoffreycaven/Projects/geocave.ca/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/geoffreycaven/Projects/geocave.ca/src/components/header.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport NavBar from './navbar';\nimport '../styles/App.css';\n\nvar Header = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Header, _React$PureComponent);\n\n  var _super = _createSuper(Header);\n\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleScroll\", function () {\n      var top = document.documentElement.scrollTop || document.body.parentNode.scrollTop || document.body.scrollTop;\n\n      if (top > 500) {\n        _this.setState({\n          headerClass: \"visible\"\n        });\n      } else {\n        _this.setState({\n          headerClass: \"\"\n        });\n      }\n    });\n\n    _this.state = {\n      headerClass: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.bindScroll();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unbindScroll();\n    }\n  }, {\n    key: \"bindScroll\",\n    value: function bindScroll() {\n      window.addEventListener('scroll', this.handleScroll);\n    }\n  }, {\n    key: \"unbindScroll\",\n    value: function unbindScroll() {\n      window.removeEventListener('scroll', this.handleScroll);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header \" + this.state.headerClass,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"brand\",\n          children: \"Geoffrey Caven\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Header;\n}(React.PureComponent);\n\nexport default Header;","map":{"version":3,"sources":["/Users/geoffreycaven/Projects/geocave.ca/src/components/header.jsx"],"names":["React","NavBar","Header","props","top","document","documentElement","scrollTop","body","parentNode","setState","headerClass","state","bindScroll","unbindScroll","window","addEventListener","handleScroll","removeEventListener","PureComponent"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,mBAAP;;IAEMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACnB,8BAAMA,KAAN;;AADmB,mEA2BJ,YAAM;AACnB,UAAMC,GAAG,GAAGC,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,IACPF,QAAQ,CAACG,IAAT,CAAcC,UAAd,CAAyBF,SADlB,IAEPF,QAAQ,CAACG,IAAT,CAAcD,SAFnB;;AAIA,UAAIH,GAAG,GAAG,GAAV,EAAe;AACb,cAAKM,QAAL,CAAc;AAACC,UAAAA,WAAW,EAAE;AAAd,SAAd;AACD,OAFD,MAEO;AACL,cAAKD,QAAL,CAAc;AAACC,UAAAA,WAAW,EAAE;AAAd,SAAd;AACD;AACF,KArCkB;;AAGnB,UAAKC,KAAL,GAAa;AACZD,MAAAA,WAAW,EAAE;AADD,KAAb;AAHmB;AAMnB;;;;wCAEoB;AAClB,WAAKE,UAAL;AACD;;;2CAEsB;AACrB,WAAKC,YAAL;AACD;;;iCAEY;AACXC,MAAAA,MAAM,CAACC,gBAAP,CACE,QADF,EAEE,KAAKC,YAFP;AAID;;;mCAEc;AACbF,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqC,KAAKD,YAA1C;AACD;;;6BAcQ;AACP,0BACE;AAAK,QAAA,SAAS,EAAE,YAAY,KAAKL,KAAL,CAAWD,WAAvC;AAAA,gCACE;AAAI,UAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD;;;;EA/CkBX,KAAK,CAACmB,a;;AAkD3B,eAAejB,MAAf","sourcesContent":["import React from 'react';\n\nimport NavBar from './navbar'\nimport '../styles/App.css';\n\nclass Header extends React.PureComponent {\n  constructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\theaderClass: \"\"\n\t\t};\n\t}\n\n  componentDidMount() {\n    this.bindScroll();\n  }\n\n  componentWillUnmount() {\n    this.unbindScroll();\n  }\n\n  bindScroll() {\n    window.addEventListener(\n      'scroll',\n      this.handleScroll\n    );\n  }\n\n  unbindScroll() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll = () => {\n    const top = document.documentElement.scrollTop\n      || document.body.parentNode.scrollTop\n      || document.body.scrollTop\n\n    if (top > 500) {\n      this.setState({headerClass: \"visible\"});\n    } else {\n      this.setState({headerClass: \"\"})\n    }\n  }\n\n  render() {\n    return (\n      <div className={\"header \" + this.state.headerClass}>\n        <h1 id=\"brand\">Geoffrey Caven</h1>\n        <NavBar/>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}